var _user$project$State$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$websocket$WebSocket$listen, 'ws://localhost:8080', _user$project$Types$Message),
			_1: {ctor: '[]'}
		});
};
var _user$project$State$extract = function (x) {
	var _p0 = x;
	if (_p0.ctor === 'Just') {
		return _p0._0;
	} else {
		return 'Kunde ej hittas';
	}
};
var _user$project$State$websocketMessage = F3(
	function (model, method, params) {
		var _p1 = _user$project$State$extract(method);
		switch (_p1) {
			case 'fetch':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							vald: _user$project$State$extract(params),
							view: _user$project$Types$ResultView
						}),
					{ctor: '[]'});
			case 'Kunde ej hittas':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{vald: 'Kunde ej hittas'}),
					{ctor: '[]'});
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{ctor: '[]'});
		}
	});
var _user$project$State$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'Name':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{name: _p2._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'GroupName':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{group_name: _p2._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Fetch':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$websocket$WebSocket$send,
						'ws://localhost:8080',
						A2(
							_elm_lang$core$Basics_ops['++'],
							'fetch|',
							A2(
								_elm_lang$core$Basics_ops['++'],
								model.group_name,
								A2(_elm_lang$core$Basics_ops['++'], '|', model.name))))
				};
			default:
				var temp = A2(_elm_lang$core$String$split, '|', _p2._0);
				var paramstmp = A2(_elm_lang$core$List$drop, 1, temp);
				var params = _elm_lang$core$List$head(paramstmp);
				var method = _elm_lang$core$List$head(temp);
				return A3(_user$project$State$websocketMessage, model, method, params);
		}
	});
var _user$project$State$init = {
	ctor: '_Tuple2',
	_0: {view: _user$project$Types$StartView, name: '', group_name: '', vald: ''},
	_1: _elm_lang$core$Platform_Cmd$none
};
